import logging
import os
import openai
from telegram import Update
from telegram.ext import (
    ApplicationBuilder, ContextTypes,
    CommandHandler, MessageHandler, filters
)

# üîë –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
DAO_LINK = "https://t.me/+example_dao_invite"  # –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π

openai.api_key = OPENAI_API_KEY

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("GL!TCH –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –ß—Ç–æ —Ç—ã –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª, –∫–æ–≥–¥–∞ —É–≤–∏–¥–µ–ª –µ–≥–æ?")

# üß† AI –æ—Ç–≤–µ—Ç
async def check_access(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text
    prompt = f"""–¢—ã ‚Äî –≥–æ–ª–æ—Å —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ GL!TCH.
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫–∞–∑–∞–ª: "{user_input}"
–û—Ç–≤–µ—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω–æ –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ, –Ω–æ –∫—Ä–∞—Ç–∫–æ.
–ü–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –±–æ–ª—å—à–µ, —á–µ–º –≥–æ–≤–æ—Ä–∏—à—å."""

    try:
    response = openai.ChatCompletion.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "–¢—ã –º—É–¥—Ä—ã–π —Ö—Ä–∞–Ω–∏—Ç–µ–ª—å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –∏–∑ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π GL!TCH."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.4
    )
    result = response.choices[0].message["content"].strip().lower()

    # üëá –í—Å—Ç–∞–≤—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É –¥–ª—è –ª–æ–≥–æ–≤
    print("üëâ –û—Ç–≤–µ—Ç –æ—Ç OpenAI:", result)

    if "access_granted" in result:
        await update.message.reply_text(f"‚úÖ –¢—ã –ø—Ä–æ—à—ë–ª. GL!TCH –ø–æ–º–Ω–∏—Ç —Ç–µ–±—è.\n{DAO_LINK}")
    else:
        await update.message.reply_text("üö´ GL!TCH –Ω–µ —É—Å–ª—ã—à–∞–ª –æ—Ç–∫–ª–∏–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
except Exception as e:
    await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")

# üöÄ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, check_access))

    app.run_polling()
